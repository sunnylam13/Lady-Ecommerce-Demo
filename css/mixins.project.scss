////////////////////////////////////////////
///// 		MIXINS PROJECT
///////////////////////////////////////////////

// all mixins that are not universal ones... that are specific to this project are placed here
// don't forget to include the $ in front of the variables

////////////////////////////////////////////
///// 		GENERAL
///////////////////////////////////////////////

@mixin themeButton1 {
	margin:0;
	padding: 0;

	background: black;
	// text-align: center;
	width: 11.8125em;
	height: 2.4375em;

	//flexbox
	@include flexboxColumn1;
	justify-content:center;
	align-content: center;
	align-items: center;

	position: relative;
	z-index: 5;

	// SLASH  ------------------------------------------------
	// this modifies the div.slash that's been inserted into various mixin templates
	// the parent element must contain a div.slash BEFORE 
	.slash {
		border: 1px solid $themeYellow;
		width: 31%;
		@include transformRotate(-64deg);

		position: absolute;
		top: 48%;
		left: 34%;
		// set z-index to -5 to put it behind .bar and .extraShader... you still need .extraShader (if you comment .extraShader out the line appears)
		z-index: -5;
	}
	// // END SLASH ------------------------------------------------

	p {
		color: $themeYellow;
		letter-spacing: 0.1em;

		// KEY POINT:  you give p a background to cut through the slash
		background: black;
		// remove the default margin... went back to style.scss and removed margin-bottom from @mixin baseParagraphStyle
		margin:0;
	}

	// this is the less accurate ::before technique where the slash is too thick
	// &::before {
	// 	@include slantSlash1($themeYellow);
	// }
}



@mixin productDivDimensions1 {
	// width: 209px;
	// height: 212px;
	width: 13.0625em;
	height: 13.25em;
	// border: 1px solid red;
}

@mixin productDivDimensions2 ($colour) {
	// width: 209px;
	// height: 212px;
	width: 13.0625em;
	height: 13.25em;
	border: 1px solid $colour;
}

@mixin backgroundImage1 ($url) {
	background-image: url($url);
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
}



@mixin marginPaddingReset1 {
	// reset margin, padding in case
	margin: 0;
	padding: 0;
}

@mixin colourSelect1 {
	// inserted into a div.colourSelect element
	// a.colour1
	// a.colour2
	
	//flexbox
	@include flexboxRow1;
	justify-content: space-around;
	align-content: space-around;

	// make sure the width is 100% of its parent width
	width: auto;

	margin-bottom: 10%;

	a.colour1,a.colour2 {
		//flex child
		flex: 1 auto;
		flex: 1 1.75em;

		// TESTING
		// border: 1px solid blue;

		width: 1.75em;
		height: 0.75em;

		// the gap between the buttons was .625em... since the margin is on both sides, divide the value in half
		// margin: 0 .3125em 0 .3125em;
		// want it flush against the left side
		margin: 0 .625em 0 0;

		// @include iphone6Minus568R {
		// 	margin-bottom: 5%;
		// }
	}

	// div.colourSelect a.colour1 {
	// 	//
	// }

	// div.colourSelect a.colour2 {
	// 	//
	// }

	// uses the colours for Abstract Dooted Dress
	a.colour1 {
		background: $abstractD1;
	}

	a.colour2 {
		background: $abstractD2;
	}
}

@mixin pulsingBorder1 ($colour) {
	@-webkit-keyframes pulseBorder {
		0% {
			border: 1px solid $colour;
		}
		25% {
			border: 3px solid $colour;
		}
		50% {
			border: 5px solid $colour;
		}
		75% {
			border: 7px solid $colour;
		}
		100% {
			border: 10px solid $colour;
		}
	}
}

///////////////////////////////////////////////



////////////////////////////////////////////
///// 		SHADERS
///////////////////////////////////////////////

@mixin purchaseShader1 {
	
	div.purchaseShader {
		//flexbox
		@include flexboxColumn1;
		justify-content: flex-end;
		align-content: flex-end;
		align-items: center;

		background: $themeYellow;

		// you need to maximize the width to allow enough space to expand
		width: 100%;
		height: auto;

		// positioning
		position: absolute;
		top:0;
		right:0;
		left:0;
		bottom:0;

		// DEFAULT VISIBILITY STATUS
		// before parent:hover
		// this must come last to override display:flex above
		display: none;

		// TESTING
		// border: 1px solid red;

		a.button {
			display: block;
			margin-bottom: 15%;
		}

		div.button {
			// refer to @mixin themeButton1
			@include themeButton1;
			margin-bottom: 10%;

			// I find using ems still doesn't make it responsive enough
			width: 8.8125em;
			// width: 100%;


			// @include transitionEffectAllEaseOut(0.1s);

			&:hover {
				background: white;
				color: black;
			}

			&:hover > p {
				background: white;
				color: black;
				font-weight: bold;
			}

			// this is used for the ::before technique
			// &:hover > div.button::before {
			// 	color: black;
			// }

			&:hover > div.slash {
				border: 1px solid black;
			}
		}

		p.price {
			font-size: $basefontsize*2;
			margin-bottom: 7%;
			position: relative;

			span {
				position: absolute;
				top:-24%;
				left:-39%;
				font-size: $basefontsize*1.3;
			}
		}
	}	
}

@mixin purchaseShaderDisplay1 {
	// requires that the parent element have the div.purchaseShader html inside already
	&:hover > div.purchaseShader {
		display: flex;
	}
}

@mixin addToCartShader1 {

	div.imgShader {
		//flexbox
		@include flexboxColumn1;
		justify-content: flex-end;
		align-content: flex-end;
		align-items: center;

		background: $themeYellow;

		// you need to maximize the width to allow enough space to expand
		width: 100%;
		height: auto;

		// positioning
		position: absolute;
		top:0;
		right:0;
		left:0;
		bottom:0;

		// default status
		// before parent:hover
		// this must come last to override display:flex above
		display: none;

		a.button {
			display: block;
			margin-bottom: 15%;
		}

		div.button {
			@include themeButton1;
			margin-bottom: 10%;
			width: 8.8125em;
		}
	}	
}

@mixin addToCartShader2 {
	
	//flexbox
	@include flexboxColumn1;
	justify-content: flex-end;
	align-content: flex-end;
	align-items: center;

	// background: $themeYellow;
	background: $themeYellow4;

	// you need to maximize the width to allow enough space to expand
	width: 100%;
	height: 20.6875em;

	// positioning
	position: absolute;
	top:0;
	right:0;
	left:0;
	bottom:0;

	// default status
	// before parent:hover
	// this must come last to override display:flex above
	display: none;

	a.button {
		display: block;
		margin-bottom: 15%;
	}

	div.button {
		@include themeButton1;
		margin-bottom: 10%;
		width: 8.8125em;

		// @include transitionEffectAllEaseOut(0.1s);

		&:hover {
			color: black;
			background: white;
		}

		&:hover > p {
			color: black;
			background: white;
			font-weight: bold;
		}

		&:hover > div.slash {
			border: 1px solid black;
		}
	}
}

///////////////////////////////////////////////


////////////////////////////////////////////
///// 		SLANTED SLASH
///////////////////////////////////////////////

// the ::before version
@mixin navSlantSlash1 ($colour) {
	// PARENT  ------------------------------------------------
	// to allow us to hook the slanted slash
	// position: relative;
	// z-index: 5;
	// // END PARENT ------------------------------------------------
	
	@include beforeAfterIconPlace042215a('/');
	position: absolute;
	color: $colour;
	font-size: $basefontsize*6;
	font-weight: 100;
	
	// had to set the z-index to -ve negative values to get it behind a link background
	z-index:-5;
	// top: -66%;
	top: -0.5em;
	left: 26%;

	@include transformRotate(10deg);
}

// the ::before version
@mixin slantSlash1 ($colour) {
	// PARENT  ------------------------------------------------
	// to allow us to hook the slanted slash
	// position: relative;
	// z-index: 5;
	// // END PARENT ------------------------------------------------
	
	@include beforeAfterIconPlace042215a('/');
	position: absolute;
	color: $colour;
	font-size: $basefontsize*4.5;
	font-weight: 100;
	
	// had to set the z-index to -ve negative values to get it behind a link background
	z-index:-5;
	// top: -66%;
	top: -0.25em;
	left: 45%;

	@include transformRotate(10deg);
}

// the ::before version
@mixin slantSlash2 ($colour) {
	// PARENT  ------------------------------------------------
	// to allow us to hook the slanted slash
	// position: relative;
	// z-index: 5;
	// // END PARENT ------------------------------------------------
	
	@include beforeAfterIconPlace042215a('/');
	position: absolute;
	color: $colour;
	font-size: $basefontsize*17.3;
	font-weight: 100;
	
	// had to set the z-index to -ve negative values to get it behind a link background
	z-index:-5;
	// top: -66%;
	top: -0.55em;
	left: 35%;

	@include transformRotate(10deg);
}

// Div version
// Company Logo
@mixin companyLogoSlashStyle1 ($borderColour) {
	border: 1px solid $borderColour;
	width: 45%;
	@include transformRotate(-64deg);

	position: absolute;
	top: 46%;
	left: 26%;
	// set z-index to -5 to put it behind .bar and .extraShader... you still need .extraShader (if you comment .extraShader out the line appears)
	z-index: -5;

	@include desktopR {
		top: 41.5%;
	}

	@include desktopR {
		top: 43.5%;
	}
}

// Div version
@mixin slantedSlash3 {
	// this was the version used for the nav menu
	// typically used for a div.slash
	// you may have to use a very specific selector set or override any backgrounds or colour
	
	// DEFAULT
	// comment out to disable and style easily
	display: none;

	border: 1px solid black;
	background: none;
	width: 37%;
	// need to set the height to zero to make sure only the border remains
	height:0;
	@include transformRotate(-64deg);

	position: absolute;
	top: 39%;
	left: 17%;
	// set z-index to -5 to put it behind .bar and .extraShader... you still need .extraShader (if you comment .extraShader out the line appears)
	z-index: -5;

	@include desktopR {
		top: 41.5%;
	}

	@include desktopR {
		top: 43.5%;
	}
}

///////////////////////////////////////////////




///////////////////////////////////////////////